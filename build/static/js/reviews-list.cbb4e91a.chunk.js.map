{"version":3,"sources":["components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx"],"names":["module","exports","Reviews","state","reviews","loader","this","setState","getMovieReviews","props","match","params","movieId","then","data","results","length","toast","warn","catch","error","finally","className","styles","reviewsList","map","review","author","reviewContent","content","id","Component"],"mappings":"6HACAA,EAAOC,QAAU,CAAC,cAAgB,+BAA+B,YAAc,+B,4ICOzEC,E,4MACJC,MAAQ,CACNC,QAAS,GACTC,QAAQ,G,kEAGW,IAAD,OAClBC,KAAKC,SAAS,CAAEF,QAAQ,IACxBG,YAAgBF,KAAKG,MAAMC,MAAMC,OAAOC,SAASC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACrD,GAA4B,IAAxBA,EAAKC,QAAQC,OAChB,OAAOC,IAAMC,KAAK,kBACnB,EAAKX,SAAS,CAAEH,QAASU,EAAKC,aAE/BI,OAAM,SAACC,GAAD,OAAWH,IAAMG,MAAMA,MAC7BC,QAAQf,KAAKC,SAAS,CAAEF,QAAQ,O,+BAG3B,IAAD,EACqBC,KAAKH,MAAzBC,EADD,EACCA,QAASC,EADV,EACUA,OACjB,OACE,qCACGA,GAAU,cAAC,IAAD,IACVD,EAAQY,OAAS,GAChB,oBAAIM,UAAWC,IAAOC,YAAtB,SACGpB,EAAQqB,KAAI,SAACC,GAAD,OACX,+BACE,yCAAYA,EAAOC,UACnB,mBAAGL,UAAWC,IAAOK,cAArB,SAAqCF,EAAOG,YAFrCH,EAAOI,gB,GAzBRC,aAuCP7B,a","file":"static/js/reviews-list.cbb4e91a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewContent\":\"Reviews_reviewContent__3PXKW\",\"reviewsList\":\"Reviews_reviewsList__2JeEO\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PreLoader from \"../Loader/Loader\";\r\nimport { getMovieReviews } from \"../../utils/api\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport styles from \"./Reviews.module.css\";\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n    loader: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ loader: true });\r\n    getMovieReviews(this.props.match.params.movieId).then(({ data }) => {\r\n        if (data.results.length === 0)\r\n        {return toast.warn(\"No reviews yet\") }\r\n        this.setState({ reviews: data.results })\r\n      })\r\n      .catch((error) => toast.error(error))\r\n      .finally(this.setState({ loader: false }));\r\n  }\r\n\r\n  render() {\r\n    const { reviews, loader } = this.state;\r\n    return (\r\n      <>\r\n        {loader && <PreLoader />}\r\n        {reviews.length > 0 && (\r\n          <ul className={styles.reviewsList}>\r\n            {reviews.map((review) => (\r\n              <li key={review.id}>\r\n                <p>Author: {review.author}</p>\r\n                <p className={styles.reviewContent}>{review.content}</p>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nReviews.propTypes = {};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}